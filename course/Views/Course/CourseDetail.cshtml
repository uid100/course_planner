@model Course
@{
    int cards_per_row = 3;
}


<div class="text-center">
    <h1 class="display-4">Course Planner</h1>
</div>

<div class="container">
    <div class="row row-md-11" style="margin:auto;">
            <div class="card col col-md-9" id="courseInfo" style="margin:auto;">
                <div class="btn card-header" 
                        data-bs-toggle="collapse" data-bs-target="#courseDetail" 
                        aria-controls="courseDetail" aria-expanded="false">
                    <div class="card-title"> 
                        @Model.Name --- <span style="text-align:right; font-weight:bold;">
                            @Model.Status
                        </span> --- show/hide detail
                    </div card-title>
                </div card-header>

                <div class="card card-body collapse" id="courseDetail">
                    <table>
                        <tr><th>cat</th><td>@Model.CatalogID</td></tr>
                        <tr><th>Name</th><td>@Model.LongName</td></tr>
                        <tr><th>Term</th><td>@Model.Term</td></tr>
                        <tr><th>Start</th><td>@Model.TermStart.DayOfWeek @Model.TermStart.ToShortDateString()</td></tr>
                        <tr><th>End</th><td>@Model.TermEnd.DayOfWeek @Model.TermEnd.ToShortDateString()</td></tr>
                    </table>
                </div card-body>

            </div card #courseInfo> 
    </div row>

    @{
        int weeks = (int)(@Model.TermEnd - @Model.TermStart).TotalDays / 7 + 1;
        int rows = (weeks + cards_per_row - 1) / cards_per_row;
        int moduleNumber = 0;
    }

    @for(int row=0; row<rows; row++)
    {
        <div class="row mt-1" style="margin:auto">
            @for(int col=0; col<cards_per_row; col++)
            {
                int week = row * cards_per_row + col + 1;
                DateTime d0 = Model.TermStart.AddDays((week-1) * 7);
                DateTime due = d0.AddDays(6);
                if (d0 > Model.TermEnd) break;
                if (due > Model.TermEnd) due = Model.TermEnd;

                var module = Model.Modules.FirstOrDefault<Module>(m => m.Week == week);
                @*if (module is not null) @(module.Title)<br>*@

                <div class="col col-md-4"  style="margin:auto;">
                    <div class="card" >
                        <div class="card-header">
                            <div class="card-title">
                                @(week == weeks ? "final exams" : "week " + week) 
                                @{
                                    if (module is not null && week < weeks)
                                    {
                                        moduleNumber++;
                                        <span style="font-weight:bold;">module @moduleNumber</span><br />
                                        @(module.Title)
                                    }
                                }
                            </div>
                        </div card-header>
                        <div class="card-body">
                            @d0.DayOfWeek: @d0.ToShortDateString()<br>
                            @due.DayOfWeek: @due.ToShortDateString()
                        </div card-body>
                    </div card>
                </div col>
            }
        </div row>            
    }

</div container>

